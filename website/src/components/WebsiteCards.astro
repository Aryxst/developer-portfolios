---
import { href } from '@/utils';
import { namings, type rawStack } from '@root/webscraper/src/namings';
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';

type Props = {
 developers: CollectionEntry<'developers'>[];
};

const { developers } = Astro.props;
---

<ul class='grid min-h-full w-full grid-cols-[repeat(auto-fill,_minmax(340px,_1fr))] gap-4 lg:grid-cols-[repeat(auto-fill,_minmax(425px,_1fr))] xl:grid-cols-[repeat(auto-fill,_minmax(510px,_1fr))]'>
 {
  developers
   .sort((a, b) => b.data.tags.length - a.data.tags.length)
   .map(developer => (
    <li class='border-2 border-black bg-white drop-shadow-xl'>
     <a href={developer.data.url}>
      <Image src={developer.data.screenshot} alt={`${developer.data.name}'s website screenshot'`} width={1280 || developer.data.screenshot.width} quality={80} decoding='async' loading='eager' format='webp' />
     </a>
     <ul class='z-10 flex flex-row flex-wrap gap-x-1 gap-y-2 border-t-2 border-black p-2'>
      {developer.data.tags[0] ? (
       (developer.data.tags as rawStack[])
        .sort((a, b) => a.localeCompare(b))
        .map(tag => (
         <li class='inline-block rounded-full bg-gray-200 px-2 py-1 text-xs font-semibold text-gray-700'>
          <a href={href(`/tags/${tag}`)}>{namings[tag].name}</a>
         </li>
        ))
      ) : (
       <li class='mr-2 inline-block rounded-full bg-gray-200 px-2 py-1 text-xs font-semibold text-gray-700'>
        <a href={href('/tags/vanilla')}>Vanilla</a>
       </li>
      )}
     </ul>
    </li>
   ))
 }
</ul>
